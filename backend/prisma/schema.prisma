// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  profile_pic String?
  Bio String?
  articles Article[]  @relation("userarticles")
  comments Comment[]  @relation("usercomments")
  saved    SavedArticle[] @relation("usersaved")
  likes    Likes[] @relation("userlikes")
  authorSaved SavedArticle[]  @relation("authorSavedArticles")
}


model Article{
  id Int @id @default(autoincrement())
  title String
  picture String?
  content String @db.Text
  created_at DateTime @default(now())
  updated_at DateTime? @updatedAt
  author User? @relation("userarticles", fields: [author_id], references: [id])
  author_id Int
  category Category @relation("articlecategory",fields: [category_id], references: [id])
  category_id Int
  comments Comment[]
  likes  Likes[]
  count Int @default(0)
  
  saved  SavedArticle[] @relation("articlesaved")

}

model Category{
  id Int @id @default(autoincrement())
  name String @unique
  articles Article[] @relation("articlecategory")

}


model Comment{
  id Int @id @default(autoincrement())
  content String
  created_at DateTime @default(now())
  author User? @relation("usercomments", fields: [author_id], references: [id])
  author_id Int
  article Article? @relation(fields: [article_id],references: [id])
  article_id Int
  
}

model Likes{
  
  author User? @relation("userlikes",fields: [author_id], references:[id])
  author_id Int
  article Article? @relation(fields: [article_id],references:[id])
  article_id Int
  
  @@id([author_id,article_id])
}

model SavedArticle{
  
  author_saved User? @relation("usersaved", fields: [author_id], references: [id])
  author_id Int

 
  originalAuthor    User?  @relation("authorSavedArticles", fields: [original_author_id], references: [id])
  original_author_id Int
  article Article? @relation("articlesaved",fields: [article_id],references: [id])
  article_id Int

  @@id([author_id,article_id])
}


 

  





